/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2016-11-20 07:33:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import util.dbhelper.DBconn;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;

public final class FAVORITE_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge, chrome\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, webkit\">\r\n");
      out.write("<title>Untitled Document</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("      \r\n");
      out.write("\t\t#STATICMENU { margin: 2.5pt; padding: 0pt;  position:absolute; right: 8%; top: 85%; height:30pt; width:23px;'}\r\n");
      out.write("    </style>\r\n");
      out.write("<link href=\"css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\r\n");
      out.write("<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"background-color:#FAF8EE\">\r\n");
      out.write("<nav class=\"navbar navbar-inverse\" style=\"border-color:#FAF8EE; background-color:#FAF8EE\">\r\n");
      out.write("  <div class=\"container-fluid\" style=\"background-color:#FAF8EE\">\r\n");
      out.write("    <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("    <div class=\"navbar-header\" style=\"background-color: #69bd8d; border-color: #69bd8d;\" >\r\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#inverseNavbar1\" style=\"border-color:#fff; background-color:#69bd8d; column-rule-color:#69bd8d;\"><span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button>\r\n");
      out.write("       <a class=\"navbar-brand\" href=\"#\" style=\"color:#fff; font-size:24px; text-align:center; margin-left:20px; margin-top:-3px\" onClick=\"location='ORDER.html'\"><span class=\"glyphicon glyphicon-credit-card\" aria-hidden=\"true\" style=\"margin-right:-10px\">&nbsp;</span>주문으로...</a></div>\r\n");
      out.write("    <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"inverseNavbar1\" align=\"center\" style=\"background-color: #69BD8D; border-color: #FAF8EE; margin-top: -6px;\">\r\n");
      out.write("      <ul class=\"nav navbar-nav navbar-right\" style=\"border-color: #FAF8EE; color: #69bd8d; margin-bottom: 12px;\">\r\n");
      out.write("      <div class=\"btn-group\" role=\"group\">\r\n");
      out.write("      <button type=\"button\" class=\"alert-info\" style=\"margin-right:5px\">속도UP</button>\r\n");
      out.write("      <button type=\"button\" class=\"alert-warning\" style=\"margin-left:5px\" onClick=\"location='SETTING.html'\">설정하기</button>\r\n");
      out.write("      <button type=\"button\" class=\"alert-success\" style=\"margin-left:5px; background-color:#e9e4f0; border-color:#b9b5bf; color:#7129d3\" onClick=\"location='ORDERED.html'\">배송보기</button>\r\n");
      out.write("       </div>\r\n");
      out.write("      </ul>\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div align=\"center\">\r\n");
      out.write("    <div align=\"center\">\r\n");
      out.write("    <input type=\"search\"/>\r\n");
      out.write("    <button class=\"btn\" style=\"color:#ffffff; background-color:#A88449; border-bottom-color:rgba(230,155,156,1.00)\">검색하기</button><br>\r\n");
      out.write("    </div>\r\n");
      out.write("    <hr>\r\n");
      out.write("    <div align=\"center\" style=\"width:90%; height:80%; background-color:#FAF8EE\">\r\n");
      out.write("    \r\n");
      out.write("    <span style=\"width:80%; height:70%; margin-left:10px; margin-right:10px\">\r\n");
      out.write("    \r\n");
      out.write("    삭제해도 되는 코드 시작\r\n");
      out.write("    <div class=\"btn-toolbar\" role=\"toolbar\">\r\n");
      out.write("      <div class=\"btn-group\" role=\"group\" align=\"center\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-default\">B1</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-default\">B2</button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"btn-group\" role=\"group\" align=\"center\" style=\"width:100%\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-primary\" style=\"width:20%\">primary</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-info\" style=\"width:20%\">info</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-success\" style=\"width:20%\">success</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-warning\" style=\"width:20%\">warning</button>\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" style=\"width:20%\">danger</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    삭제해도 되는 코드 끝\r\n");
      out.write("    </span>\r\n");
      out.write("    </div>\r\n");
      out.write("  <br>\r\n");
      out.write("    <!-- /.navbar-collapse -->\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- /.container-fluid -->\r\n");
      out.write(" \r\n");
      out.write("  </div>\r\n");
      out.write(" \r\n");
      out.write("<form id=\"STATICMENU\" style=\"background:#none; z-index:2\">\r\n");
      out.write("<img src=\"icon/console.png\" width=\"35\" height=\"55\" onclick=\"click_test()\" alt=\"\"/>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write(" var stmnLEFT = 10; // 오른쪽 여백 \r\n");
      out.write(" var stmnGAP1 = 0; // 위쪽 여백 \r\n");
      out.write(" var stmnGAP2 = 150; // 스크롤시 브라우저 위쪽과 떨어지는 거리 \r\n");
      out.write(" var stmnBASE = 150; // 스크롤 시작위치 \r\n");
      out.write(" var stmnActivateSpeed = 35; //스크롤을 인식하는 딜레이 (숫자가 클수록 느리게 인식)\r\n");
      out.write(" var stmnScrollSpeed = 20; //스크롤 속도 (클수록 느림)\r\n");
      out.write(" var stmnTimer; \r\n");
      out.write(" var flag = 0;\r\n");
      out.write(" \r\n");
      out.write(" function RefreshStaticMenu() { \r\n");
      out.write("  var stmnStartPoint, stmnEndPoint; \r\n");
      out.write("  stmnStartPoint = parseInt(document.getElementById('STATICMENU').style.top, 10); \r\n");
      out.write("  stmnEndPoint = Math.max(document.documentElement.scrollTop, document.body.scrollTop) + stmnGAP2; \r\n");
      out.write("  if (stmnEndPoint < stmnGAP1) stmnEndPoint = stmnGAP1; \r\n");
      out.write("  if (stmnStartPoint != stmnEndPoint) { \r\n");
      out.write("   stmnScrollAmount = Math.ceil( Math.abs( stmnEndPoint - stmnStartPoint ) / 15 ); \r\n");
      out.write("   document.getElementById('STATICMENU').style.top = parseInt(document.getElementById('STATICMENU').style.top, 10) + ( ( stmnEndPoint<stmnStartPoint ) ? -stmnScrollAmount : stmnScrollAmount ) + 'px'; \r\n");
      out.write("   stmnRefreshTimer = stmnScrollSpeed; \r\n");
      out.write("   }\r\n");
      out.write("  stmnTimer = setTimeout(\"RefreshStaticMenu();\", stmnActivateSpeed); \r\n");
      out.write("  } \r\n");
      out.write(" function InitializeStaticMenu() {\r\n");
      out.write(" // document.getElementById('STATICMENU').style.backgroundColor=\"#dde8f0\"; //크기 보고 싶어서 색 바꿔 놓음 #dde8f0\r\n");
      out.write("  \r\n");
      out.write("  document.getElementById('STATICMENU').style.right = stmnLEFT + 'px';  //처음에 오른쪽에 위치. left로 바꿔도.\r\n");
      out.write("  document.getElementById('STATICMENU').style.top = document.body.scrollTop + stmnBASE + 'px'; \r\n");
      out.write("  //document.getElementById('STATICMENU').style.backgroundImage = url(icon/test.png);\r\n");
      out.write("  RefreshStaticMenu();\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write(" function click_test(){\r\n");
      out.write("\tvar obj = document.getElementById('STATICMENU');\r\n");
      out.write("\t \r\n");
      out.write("\tif(flag == 0)\r\n");
      out.write("\t{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar btnupdate = document.createElement('img');\r\n");
      out.write("\t    btnupdate.setAttribute('id', 'b1');\r\n");
      out.write("\t    //btnupdate.setAttribute('type', 'button');\r\n");
      out.write("\t    btnupdate.setAttribute('src', 'icon/lace.png');\r\n");
      out.write("\t    btnupdate.setAttribute('style','position :relative; right : 0px; bottom :90px ; height:25pt; width:25px; solid : #0000');\r\n");
      out.write("\t    btnupdate.onclick = function() {  alert('test1');  };\r\n");
      out.write("\t    obj.appendChild(btnupdate);\r\n");
      out.write("\t    \r\n");
      out.write("\t    var btnupdate = document.createElement('img');\r\n");
      out.write("\t    btnupdate.setAttribute('id', 'b2');\r\n");
      out.write("\t    //btnupdate.setAttribute('type', 'button');\r\n");
      out.write("\t    btnupdate.setAttribute('src', 'icon/credit-card.png');\r\n");
      out.write("\t    btnupdate.setAttribute('style','position :relative; right : 33px; bottom :99px ; height:23pt; width:30px; solid : #0000')\r\n");
      out.write("\t    btnupdate.onclick = function() {  alert('test');  };\r\n");
      out.write("\t    obj.appendChild(btnupdate);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t var btnupdate = document.createElement('img');\r\n");
      out.write("\t    btnupdate.setAttribute('id', 'b3');\r\n");
      out.write("\t    //btnupdate.setAttribute('type', 'button');\r\n");
      out.write("\t    btnupdate.setAttribute('src', 'icon/delivery-truck.png');\r\n");
      out.write("\t    btnupdate.setAttribute('style','position :relative; right :35px; bottom:95px ; height:25pt; width:30px; solid : #0000')\r\n");
      out.write("\t    btnupdate.onclick = function() {  alert('test');  };\r\n");
      out.write("\t    obj.appendChild(btnupdate); \r\n");
      out.write("\t    \r\n");
      out.write("\t    var btnupdate = document.createElement('img');\r\n");
      out.write("\t    btnupdate.setAttribute('id', 'b4');\r\n");
      out.write("\t    //btnupdate.setAttribute('type', 'button');\r\n");
      out.write("\t    btnupdate.setAttribute('src', 'icon/fix.png');\r\n");
      out.write("\t    btnupdate.setAttribute('style','position :relative; right :15px; bottom : 96px ; height:25pt; width:25px; solid : #0000')\r\n");
      out.write("\t    btnupdate.onclick = function() {  alert('test');  };\r\n");
      out.write("\t    obj.appendChild(btnupdate);\r\n");
      out.write("\t    \r\n");
      out.write("\t    flag = 1;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\telse if(flag == 1)\r\n");
      out.write("\t{\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar btn = document.getElementById(\"b1\");\r\n");
      out.write("\t\tobj.removeChild(btn);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar btn = document.getElementById(\"b2\");\r\n");
      out.write("\t\tobj.removeChild(btn);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar btn = document.getElementById(\"b3\");\r\n");
      out.write("\t\tobj.removeChild(btn);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar btn = document.getElementById(\"b4\");\r\n");
      out.write("\t\tobj.removeChild(btn);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tflag = 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write(" }\r\n");
      out.write("</script>\r\n");
      out.write("</nav>\r\n");
      out.write("<footer class=\"footer\" id=\"footer\" align=\"right\" style=\"color:#8ba0e8; margin-right:10px\"><br>Three J Two K company</footer>\r\n");
      out.write("<script src=\"js/bootstrap.js\" type=\"text/javascript\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

	int count = 0;
	int Total_size = 0;
	int Array_count[];
	int Array_id[];
	String Array_name[];
	int i = 0;

	String code = request.getParameter("code");
	Connection conn = DBconn.getConnection();

	Statement st = conn.createStatement();
	String sql = "Select count(*) as count from bookmark";
	ResultSet rs = st.executeQuery(sql);
	if (rs.next()) { //검색된 결과가 존재하면 true
		count = rs.getInt("count");

	} else {
		out.println("입력하신 " + code + "는 존재하지 않습니다.");
	}
	rs.close();
	st.close();
	st = conn.createStatement();
	sql = "Select bookmark_id,weight,bookmark_name from bookmark order by weight DESC";
	rs = st.executeQuery(sql);
	Array_count = new int[count];
	Array_name = new String[count];
	Array_id = new int[count];
	while (rs.next()) {
		
		int Bookmark_id = rs.getInt("bookmark_id");
		int Bookmark_count = rs.getInt("weight");
		String Bookmark_name = rs.getString("bookmark_name");
		Array_id[i] = Bookmark_id;
		Array_name[i] = Bookmark_name;
		Array_count[i] = Bookmark_count;
		Total_size += Bookmark_count;
		i++;
	}

	rs.close();
	st.close();
	DBconn.close();

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar result = '';\r\n");
      out.write("\t\tvar count = \"");
      out.print(count);
      out.write("\";\r\n");
      out.write("\t\tvar ary_count = new Array();\r\n");
      out.write("\t\tvar Total_size = \"");
      out.print(Total_size);
      out.write("\";\r\n");
      out.write("\t\tvar ary_name = new Array();\r\n");
      out.write("\t\tvar ary_id = new Array();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
for (int k = 0; k < count; k++) {
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tary_count[");
      out.print(k);
      out.write("] = '");
      out.print(Array_count[k]);
      out.write("';\r\n");
      out.write("\t\t\tary_name[");
      out.print(k);
      out.write("] = '");
      out.print(Array_name[k]);
      out.write("';\r\n");
      out.write("\t\t\tary_id[");
      out.print(k);
      out.write("] = '");
      out.print(Array_id[k]);
      out.write("';\r\n");
}
      out.write("\r\n");
      out.write("\telm = document.getElementById(\"block_button\");\r\n");
      out.write("\tvar form = document.createElement('form');\r\n");
      out.write("\tform.setAttribute(\"method\", \"POST\");\r\n");
      out.write("\tform.setAttribute(\"action\", \"print_Items.jsp\");\r\n");
      out.write("\telm.appendChild(form);\r\n");
      out.write("\tfor (var n = 0; n < count; n++) {\r\n");
      out.write("\t\tvar size = ary_count[n];\r\n");
      out.write("\r\n");
      out.write("\t\tvar input_element = document.createElement('input');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tswitch (n%3) {\r\n");
      out.write("\t\tcase 0:\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"class\", \"btn btn-info\");\r\n");
      out.write("\t\t\t// this background color is not working....\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"style\",\"background-color:rgb(255,0,255,1.00); border-radius:13px\");\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase 1:\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"class\", \"btn btn-success\");\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"style\",\"background-color:rgb(0,255,255,1.00); border-radius:13px\");\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tcase 2:\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"class\", \"btn btn-warning\");\r\n");
      out.write("\t\t\tinput_element.setAttribute(\"style\",\"background-color:rgb(255,255,0,1.00); border-radius:13px\");\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\tdefault:\r\n");
      out.write("\t\t\tbreak;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tinput_element.setAttribute(\"type\", \"submit\");\r\n");
      out.write("\t\tinput_element.setAttribute(\"name\", \"submit\");\r\n");
      out.write("\t\tinput_element.setAttribute(\"value\", ary_id[n]);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tinput_element.style.margin = 2.5 + 'px';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (size * 4 < 80)\r\n");
      out.write("\t\t\tinput_element.style.width = 80 + 'px';\r\n");
      out.write("\t\telse\r\n");
      out.write("\t\t\tinput_element.style.width = size * 4 + 'px';\r\n");
      out.write("\t\tinput_element.style.height = 100 + 'px';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tform.appendChild(input_element);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
